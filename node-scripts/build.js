import { readdirSync, readFileSync, writeFileSync, cpSync } from 'fs'
import { minify } from 'html-minifier'
import { minify as csso } from 'csso'
import MarkdownIt from 'markdown-it'
import matter from 'gray-matter'
import nunjucks from 'nunjucks'

const currentYear = new Date().getFullYear()
const getReadtime = text => Math.max(Math.ceil(text.split(/\s+/).length / 200), 1)
const md = new MarkdownIt({ html: true, typographer: true })

const getRenderer = () => {
	const minifierOptions = {
		caseSensitive: true,
		collapseInlineTagWhitespace: true,
		collapseWhitespace: true,
		conservativeCollapse: true,
		decodeEntities: true,
		includeAutoGeneratedTags: false,
		minifyCSS: true,
		preserveLineBreaks: true,
		preventAttributesEscaping: true,
		removeAttributeQuotes: true,
		removeComments: true,
		removeEmptyAttributes: true,
		removeRedundantAttributes: true,
		removeScriptTypeAttributes: true,
		removeStyleLinkTypeAttributes: true,
	}
	const njk = nunjucks.configure('templates', { autoescape: true, trimBlocks: true, lstripBlocks: true })
	return (template, data) => minify(njk.render(template, data), minifierOptions)
}

export const generateArticles = () => {
	const render = getRenderer()

	const articleFiles = readdirSync('articles')
	const articles = []

	articleFiles.forEach(filename => {
		const article = readFileSync(`articles/${filename}`, { encoding: 'utf8' })
		const { data, content } = matter(article)
		const html = md.render(content)
		const name = filename.split('.')[0]
		articles.push({ ...data, content, href: `/articles/${name}.html` })
		const [year] = name.split('-')
		const readtime = `~${getReadtime(content)} min.`
		const result = render('article.njk', { year, readtime, html, currentYear, ...data })
		writeFileSync(`public/articles/${name}.html`, result, { flag: 'w+' })
	})

	const articlesPage = render('articles.njk', { articles, currentYear })
	writeFileSync(`public/articles/index.html`, articlesPage, { flag: 'w+' })
	console.log(new Date(), 'Articles built')
}

export const generatePages = () => {
	const render = getRenderer()

	const index = render('index.njk', { currentYear })
	writeFileSync(`public/index.html`, index, { flag: 'w+' })

	const auth = render('auth.njk', { currentYear })
	writeFileSync(`public/auth.html`, auth, { flag: 'w+' })

	console.log(new Date(), 'Static pages generated')
}

export const moveAssets = () => {
	cpSync('assets', 'public/assets', { recursive: true })
	const styleFile = readFileSync('public/assets/all.css', { encoding: 'utf8' })
	const optimizedCss = csso(styleFile).css
	writeFileSync('public/assets/all.css', optimizedCss, { flag: 'w+' })
	console.log(new Date(), 'Assets moved')
}

generateArticles()
generatePages()
moveAssets()
